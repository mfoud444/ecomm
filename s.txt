time="2024-07-30T00:14:56Z" level=warning msg="The \"USER\" variable is not set. Defaulting to a blank string."


version: "3.1"

services:
  bagisto-php-apache:
    build:
      args:
        container_project_path: /var/www/html/
        uid: 1000
        user: $USER
      context: .
      dockerfile: ./Dockerfile
    image: bagisto-php-apache
    ports:
      - 8000:8000
    volumes:
      - ./workspace/:/var/www/html/

  bagisto-mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 3306:3306
    volumes:
      - ./.configs/mysql-data:/var/lib/mysql/

  bagisto-redis:
    image: redis:6.2-alpine
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - ./.configs/redis-data:/data

  bagisto-phpmyadmin:
    image: phpmyadmin:latest
    environment:
      PMA_HOST: bagisto-mysql
      PMA_USER: root
      PMA_PASSWORD: root
      UPLOAD_LIMIT: 512M
    ports:
      - 8080:8000

  bagisto-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ./.configs/elasticsearch-data:/var/lib/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300

  bagisto-kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    environment:
      - ELASTICSEARCH_HOSTS=http://bagisto-elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - bagisto-elasticsearch

  bagisto-mailhog:
      image: mailhog/mailhog
      logging:
          # Disable saving logs.
          driver: 'none'
      ports:
          # SMTP server.
          - 1025:1025
          - 8025:8025


# main image
FROM php:8.1-apache

# installing dependencies
RUN apt-get update && apt-get install -y \
    git \
    ffmpeg \
    libfreetype6-dev \
    libicu-dev \
    libgmp-dev \
    libjpeg62-turbo-dev \
    libpng-dev \
    libwebp-dev \
    libxpm-dev \
    libzip-dev \
    unzip \
    zlib1g-dev

# configuring php extension
RUN docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp
RUN docker-php-ext-configure intl

# installing php extension
RUN docker-php-ext-install bcmath calendar exif gd gmp intl mysqli pdo pdo_mysql zip

# installing composer
COPY --from=composer:latest /usr/bin/composer /usr/local/bin/composer

# installing node js
COPY --from=node:latest /usr/local/lib/node_modules /usr/local/lib/node_modules
COPY --from=node:latest /usr/local/bin/node /usr/local/bin/node
RUN ln -s /usr/local/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm

# installing global node dependencies
RUN npm install -g npx
RUN npm install -g laravel-echo-server

# arguments
ARG container_project_path
ARG uid
ARG user

# setting work directory
WORKDIR $container_project_path

# adding user
RUN useradd -G www-data,root -u $uid -d /home/$user $user
RUN mkdir -p /home/$user/.composer && \
    chown -R $user:$user /home/$user

# setting apache
COPY ./.configs/apache.conf /etc/apache2/sites-available/000-default.conf
RUN a2enmod rewrite

# setting up project from `src` folder
RUN chmod -R 775 $container_project_path
RUN chown -R $user:www-data $container_project_path

# changing user
USER $user

EXPOSE 5000
COPY . .
CMD ["sh", "setup.sh"]


i want without create user 